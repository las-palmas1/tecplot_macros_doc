Examples
==============
В данном разделе будет представлен пример пост-процессинга результатов расчета в CFX сужающегося канала.
На входе и на выходе был задан перепад давлений. По бокам и снизу - условие симметрии, сверху - гладкая стенка без проскальзывания.
В качестве среды использовался воздух. Геометрия представлена на рисунке ниже.

.. figure:: example\other_images\geometry.png
	:scale: 50 %
	:align: center

	Геометрия рассчитанного в CFX канала.


Перевод файлов CFX в формат TecPlot
-----------------------------------
Осуществляется с помощью функции :any:`get_open_data_file_command`, возвращающей команду,
открывающую файл с данными, и с помощью функции :any:`get_write_data_set_command`, возвращающей команду, сохраняющую 
текущий файл в формате .plt.

.. literalinclude::  example\tecplot_data_files_creation.py


Создание новых переменных
--------------------------
Осуществляется с помощью функции :any:`get_alterdata_command`. При этом сохранять файл данных с новыми переменными 
необходимо в формате .lay при помощи функции :any:`get_save_layout_command`. 

.. literalinclude::  example\alter_data_creation.py

Извлечение данных по полилинии
-------------------------------
Осуществляется с помощью классов :any:`Point`, :any:`PolyLine`, :any:`LineDataExtractor`. Сначала создаются экземпляры 
класса :any:`Point`, затем создаются полилинии, а затем - экземпляр класса :any:`LineDataExtractor`. Потом вызывается метод 
run_extraction экземпляра класса :any:`LineDataExtractor`, который создает и запускает макрос для извлечения данных по полилиниям.
При этом стоит помнить, что параметр polylines_list у инициализатора класса :any:`LineDataExtractor` представляет собой список, 
содержащий списки полилиний, каждый из которых соответствует файлу с данными из папки, путь к которой содержится в параметре datafiles_dir
инициализатора класса :any:`LineDataExtractor`.

.. literalinclude::  example\data_extraction.py

Загрузка извлеченных данных из текстовых файлов
------------------------------------------------
Осуществляется с помощью класса :any:`LineDataLoader`. Его инициализатор содержит лишь один параметр data_dirname, 
содержащий путь к директории с файлами с извлеченными данными. Данные из каждого файла извлекаются вызовом метода load в экземпляры класса   
pandas.DataFrame, список которых содержится в поле frames. После извлечения с помощью модуля matplotlib.pyplot можно осуществить 
построение необходимых графиков.

.. literalinclude::  example\plot_creation.py

.. figure:: example\plots\velocity_profile.png
	:scale: 80 %
	:align: center

	Полученный график профилей скорости на входе и на выходе.

Создание изображений срезов
-----------------------------
Осуществляется с помощью класса :any:`PictureCreator`. Для его инициализации требуются экземпляры классов :any:`SliceSettings`, :any:`LevelSettings`, :any:`LegendSettings`, 
:any:`AxisSettings`, :any:`FrameSettings`, :any:`ColormapSettings` и :any:`ExportSettings`. Значения интервалов по осям, содержащихся в keyword xlim и ylim инициализатора класса 
:any:`AxisSettings`, являются значенями, подставлямыми в команду скрптивого языка TecPlot, устанавливающую величину интервалов по осям. При этом они могут не совпадать со значсенями 
интервалов на результирующей картинке, так как на их величину также влияют команды, устанавливающие размер осей по отношению к размеру фрейма и размер самого фрейма.

.. literalinclude::  example\picture_creation.py

В результате выполнения скрипта получается следующее изображение.

.. figure:: example\images\U_long.png
	:scale: 30 %
	:align: center

	Полученное изображение распределения продольной составляющей скорости в продольном сечении